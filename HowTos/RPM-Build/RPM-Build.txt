RPM-Build
    How To Build RPM Packages.
Contents
  Building rpms with 'rpmbuild'
    Build an rpm from a script
      Preparation
        Requirements
        The rpm directory structure
      The 'SOURCE' code Directory
      The 'spec' file
      The 'rpmbuild' command to build the rpm
      Verify, Install, and Test the rpm
    Build an rpm from source (src) code
  Notes on RPM, Versioning, and Structure
  Documentation
  References

How-To
1. Building rpms with 'rpmbuild'
  a. Build an rpm from a script

    1. Preparation (This is the same for "Build an rpm from source)
       Before you begin building rpms you may need to prepare the environment.
      a. Requirements
        ####    Install the 'rpm-build' package/s
        ####    -SUSE
        $ sudo zypper in patterns-devel-base-devel_rpm_build rpm-build
        ####    -Redhat
        $ sudo yum install rpm-build
      b. The rpm directory structure
        It is best to start with a standard rpmbuild directory structure in your
         user's ${HOME}/ directory, don't get in the habbit of building rpms as
         root, there is potential for breaking things if you do.
        ####    rpmbuild directory structure
        $ mkdir -p ~/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
        $ cd ~/rpmbuild
        $ tree -L 1 .
        .
        ├── BUILD
        ├── BUILDROOT
        ├── RPMS
        ├── SOURCES
        ├── SPECS
        └── SRPMS

    2. The 'SOURCE' code Directory
      The 'source' is the script itself, placed in the "SOURCES" directory under the 
       rpmbuild directory structure.
      ####    Get the script into the "SOURCES" directory- notice the re-name (my pref)
      $ cp ~/repos/github/TipsAndTricks/Useful_Tips/useful-tips.sh ~/rpmbuild/SOURCES/usefultips

    3. The 'spec' file
       Examples for this documentation- I will use my "usefultips.sh" script for the 
        "source", I will use my user's info for the Path, etc.
       The 'spec' filename suould match the name of the 'source', e.g. "usefultips.spec",
        and the content "%define name" must be the name of the script-name inside the 
        "SOURCES" directory, e.g. "usefultips".
       The spec file must be in the "SPECS" directory under the rpmbuild directory 
        structure.
       Here's the spec file for the usefultips.sh script
       $ cat SPECS/usefultips.spec
       ####    Output
Name:           usefultips
Version:        0.0.2
Release:        03
Summary:        Living script consisting of collections of useful tips gathered over time
Group:          Applications/Information
License:        GPLv2
URL:            https://github.com/SeaPhor/TipsAndTricks/blob/master/Useful_Tips/Latest_Stable/useful-tips.sh
Source:		%{name}
#Source0:        /home/c4/rpmbuilds/SOURCES/usefultips
BuildRoot:      %{buildroot}
Prefix:		/usr
%description
A Living script for Useful Linux commands, scripting, and configuring 
in an Enterprise environment
%prep
#%setup -q
%install
cd /home/c4/rpmbuild/BUILDROOT
mkdir -p %{buildroot}/usr/local/bin
cp %{_topdir}/SOURCES/%{name} %{buildroot}/usr/local/bin/
%clean
rm -rf $RPM_BUILD_ROOT
%files
%defattr(-,c4,users)
/usr/local/bin/usefultips
%doc
%changelog
       After the spec file is in the "SPECS" directory, and the script is in the "SOURCES"
        directory, your environment should look like so:
       $ rpmbuild> tree -L 2 .
       .
       ├── BUILD
       ├── BUILDROOT
       ├── RPMS
       ├── SOURCES
       │   └── usefultips
       ├── SPECS
       │   └── usefultips.spec
       └── SRPMS

    4. The 'rpmbuild' command to build the rpm
       Read the man page for the other options available, for this document I am 
        only using what is needed.
       ####    The rpmbuild command
       $ rpmbuild -v -bb --clean SPECS/usefultips.spec
       ####    Output
Executing(%prep): /bin/sh -e /var/tmp/rpm-tmp.aXzDRT
+ umask 022
+ cd /home/c4/rpmbuild/BUILD
+ exit 0
Executing(%install): /bin/sh -e /var/tmp/rpm-tmp.mopZjD
+ umask 022
+ cd /home/c4/rpmbuild/BUILD
+ cd /home/c4/rpmbuild/BUILDROOT
+ mkdir -p /home/c4/rpmbuild/BUILDROOT/usefultips-0.0.2-04.x86_64/usr/local/bin
+ cp /home/c4/rpmbuild/SOURCES/usefultips /home/c4/rpmbuild/BUILDROOT/usefultips-0.0.2-04.x86_64/usr/local/bin/
+ /usr/lib/rpm/brp-compress
+ /usr/lib/rpm/brp-suse
calling /usr/lib/rpm/brp-suse.d/brp-99-compress-vmlinux
calling /usr/lib/rpm/brp-suse.d/brp-99-pesign
No buildservice signing certificate
Creating /home/c4/rpmbuild/OTHER/usefultips.cpio.rsasign
1 block
Processing files: usefultips-0.0.2-04.x86_64
Provides: usefultips = 0.0.2-04 usefultips(x86-64) = 0.0.2-04
Requires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1
Requires: /usr/bin/env
Checking for unpackaged file(s): /usr/lib/rpm/check-files /home/c4/rpmbuild/BUILDROOT/usefultips-0.0.2-04.x86_64
Wrote: /home/c4/rpmbuild/RPMS/x86_64/usefultips-0.0.2-04.x86_64.rpm
Executing(%clean): /bin/sh -e /var/tmp/rpm-tmp.0bADvn
+ umask 022
+ cd /home/c4/rpmbuild/BUILD
+ rm -rf /home/c4/rpmbuild/BUILDROOT/usefultips-0.0.2-04.x86_64
+ exit 0
Executing(--clean): /bin/sh -e /var/tmp/rpm-tmp.yr4HH7
+ umask 022
+ cd /home/c4/rpmbuild/BUILD
+ exit 0

    5. Verify, Install, and Test the rpm
      In the output above you will see the full path to the newly created rpm:
       "Wrote: /home/c4/rpmbuild/RPMS/x86_64/usefultips-0.0.2-04.x86_64.rpm"
      ####    Verify the rpm
      $ rpm -qpi RPMS/x86_64/usefultips-0.0.2-04.x86_64.rpm
      ####    Output will be the contents of your spec file
      ####    Install the rpm
      $ sudo rpm -Uhv RPMS/x86_64/usefultips-0.0.2-04.x86_64.rpm # ALWAYS use "U"
      ####    Output
      Preparing...                          ################################# [100%]
      Updating / installing...
         1:usefultips-0.0.2-04              ################################# [100%]
      $ which usefultips
      /usr/local/bin/usefultips
      $ usefultips vers
      This Version/Revision of usefultips is 0.0.2-04 released on 15 Sep 2018

  b. Build an rpm from source (src) code
    Not available yet, see the "Resources" section for links

  c. Creating Patch to update source code
    Not available yet, see the "Resources" section for links

2. Notes on RPM, Versioning, and Structure
  a. It recommended to ALWAYS use "U" instead of "i" when installing an rpm... 
      Read the man page to find out why.
  b. Use a standardized versioning method and be consistant with its use.
  c. When building a newer rev of a previously built rpm, remember to copy the edited 
      script to the "SOURCES" directory, and update the "Release", and possible the 
      "Version" section/s of the 'spec' file.

3. Documentation
  The commands, files, and executions in this document were performed on openSUSE Leap-15
  Whether SUSE-based distro or Redhat-based the structure and process is basically
   the same, but, SUSE has some built in and enhanced/expanded capabilities.
  Whether SUSE or Redhat platform, there are other tools to use instead of this 
   manual process, such as, SUSE's "Open Build Service", which is distro agnostic, and
   can be used online or downloaded and used locally. (see "Rferences")

4. References
  https://cromwell-intl.com/open-source/rpm-patch.html
  https://www.suse.com/documentation/suse-best-practices/pdfdoc/sbp-rpm-packaging/sbp-rpm-packaging.pdf
  https://access.redhat.com/sites/default/files/attachments/rpm_building_howto.pdf
  https://openbuildservice.org/

